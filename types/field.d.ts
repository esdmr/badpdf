export class CheckboxField extends RadioButtonField {
}
export class Field extends PDFObject {
    constructor(data: any);
    alignment: any;
    borderStyle: any;
    buttonAlignX: any;
    buttonAlignY: any;
    buttonFitBounds: any;
    buttonPosition: any;
    buttonScaleHow: any;
    ButtonScaleWhen: any;
    calcOrderIndex: any;
    comb: any;
    commitOnSelChange: any;
    set currentValueIndices(indices: any);
    get currentValueIndices(): any;
    defaultStyle: any;
    defaultValue: any;
    doNotScroll: any;
    doNotSpellCheck: any;
    delay: any;
    display: any;
    doc: any;
    editable: any;
    exportValues: any;
    fileSelect: any;
    hidden: any;
    highlight: any;
    lineWidth: any;
    multiline: any;
    multipleSelection: boolean;
    name: any;
    password: any;
    print: any;
    radiosInUnison: any;
    readonly: any;
    rect: any;
    required: any;
    richText: any;
    richValue: any;
    style: any;
    submitName: any;
    textFont: any;
    textSize: any;
    type: any;
    userName: any;
    _actions: any;
    _browseForFileToSubmit: any;
    _buttonCaption: string[];
    _buttonIcon: any[];
    _charLimit: any;
    _children: any;
    _currentValueIndices: any;
    _document: any;
    _fieldPath: any;
    _fillColor: any;
    _isChoice: boolean;
    _items: any;
    _hasValue: any;
    _page: any;
    _strokeColor: any;
    _textColor: any;
    _value: any;
    _kidIds: any;
    _fieldType: number;
    _siblings: any;
    _rotation: any;
    _globalEval: any;
    _appObjects: any;
    set value(value: any);
    get value(): any;
    set fillColor(color: any);
    get fillColor(): any;
    set bgColor(color: any);
    get bgColor(): any;
    set charLimit(limit: any);
    get charLimit(): any;
    set numItems(_: any);
    get numItems(): any;
    set strokeColor(color: any);
    get strokeColor(): any;
    set borderColor(color: any);
    get borderColor(): any;
    set page(_: any);
    get page(): any;
    set rotation(angle: any);
    get rotation(): any;
    set textColor(color: any);
    get textColor(): any;
    set fgColor(color: any);
    get fgColor(): any;
    _originalValue: string;
    _getValue(): any;
    _setChoiceValue(value: any): void;
    set valueAsString(_: any);
    get valueAsString(): any;
    browseForFileToSubmit(): void;
    buttonGetCaption(nFace?: number): string;
    buttonGetIcon(nFace?: number): any;
    buttonImportIcon(cPath?: any, nPave?: number): void;
    buttonSetCaption(cCaption: any, nFace?: number): void;
    buttonSetIcon(oIcon: any, nFace?: number): void;
    checkThisBox(nWidget: any, bCheckIt?: boolean): void;
    clearItems(): void;
    deleteItemAt(nIdx?: any): void;
    getItemAt(nIdx?: number, bExportValue?: boolean): any;
    getArray(): any;
    getLock(): any;
    isBoxChecked(nWidget: any): boolean;
    isDefaultChecked(nWidget: any): boolean;
    insertItemAt(cName: any, cExport?: any, nIdx?: number): void;
    setAction(cTrigger: any, cScript: any): void;
    setFocus(): void;
    setItems(oArray: any): void;
    setLock(): void;
    signatureGetModifications(): void;
    signatureGetSeedValue(): void;
    signatureInfo(): void;
    signatureSetSeedValue(): void;
    signatureSign(): void;
    signatureValidate(): void;
    _isButton(): boolean;
    _reset(): void;
    _runActions(event: any): boolean;
}
export class RadioButtonField extends Field {
    constructor(otherButtons: any, data: any);
    exportValues: any[];
    _radioIds: any[];
    _radioActions: any[];
    _hasBeenInitialized: boolean;
    _siblings: any[];
    _getExportValue(state: any): any;
}
import { PDFObject } from "./pdf_object.js";
