export class Doc extends PDFObject {
    constructor(data: any);
    _expandos: typeof globalThis;
    _baseURL: any;
    _calculate: boolean;
    _delay: boolean;
    _dirty: boolean;
    _disclosed: boolean;
    _media: any;
    _metadata: any;
    _noautocomplete: any;
    _nocache: any;
    _spellDictionaryOrder: any[];
    _spellLanguageOrder: any[];
    _printParams: any;
    _fields: Map<any, any>;
    _fieldNames: any[];
    _event: any;
    _author: any;
    _creator: any;
    _creationDate: any;
    _docID: any;
    _documentFileName: any;
    _filesize: any;
    _keywords: any;
    _layout: any;
    _modDate: any;
    _numFields: number;
    _numPages: any;
    _pageNum: any;
    _producer: any;
    _securityHandler: any;
    _subject: any;
    _title: any;
    _URL: any;
    _info: any;
    _zoomType: "NoVary";
    _zoom: any;
    _actions: any;
    _globalEval: any;
    _pageActions: any;
    _userActivation: boolean;
    _disablePrinting: boolean;
    _disableSaving: boolean;
    _otherPageActions: any;
    _initActions(): void;
    _dispatchDocEvent(name: any): void;
    _dispatchPageEvent(name: any, actions: any, pageNumber: any): void;
    _runActions(name: any): void;
    _addField(name: any, field: any): void;
    _getDate(date: any): any;
    set author(_: any);
    get author(): any;
    set baseURL(baseURL: any);
    get baseURL(): any;
    set bookmarkRoot(_: any);
    get bookmarkRoot(): any;
    set calculate(calculate: boolean);
    get calculate(): boolean;
    set creator(_: any);
    get creator(): any;
    set dataObjects(_: any[]);
    get dataObjects(): any[];
    set delay(delay: boolean);
    get delay(): boolean;
    set dirty(dirty: boolean);
    get dirty(): boolean;
    set disclosed(disclosed: boolean);
    get disclosed(): boolean;
    set docID(_: any);
    get docID(): any;
    set documentFileName(_: any);
    get documentFileName(): any;
    set dynamicXFAForm(_: boolean);
    get dynamicXFAForm(): boolean;
    set external(_: boolean);
    get external(): boolean;
    set filesize(_: any);
    get filesize(): any;
    set hidden(_: boolean);
    get hidden(): boolean;
    set hostContainer(_: any);
    get hostContainer(): any;
    set icons(_: any);
    get icons(): any;
    set info(_: any);
    get info(): any;
    set innerAppWindowRect(_: number[]);
    get innerAppWindowRect(): number[];
    set innerDocWindowRect(_: number[]);
    get innerDocWindowRect(): number[];
    set isModal(_: boolean);
    get isModal(): boolean;
    set keywords(_: any);
    get keywords(): any;
    set layout(value: any);
    get layout(): any;
    set media(media: any);
    get media(): any;
    set metadata(metadata: any);
    get metadata(): any;
    set modDate(_: any);
    get modDate(): any;
    set mouseX(_: number);
    get mouseX(): number;
    set mouseY(_: number);
    get mouseY(): number;
    set noautocomplete(noautocomplete: any);
    get noautocomplete(): any;
    set nocache(nocache: any);
    get nocache(): any;
    set numFields(_: number);
    get numFields(): number;
    set numPages(_: any);
    get numPages(): any;
    set numTemplates(_: number);
    get numTemplates(): number;
    set outerAppWindowRect(_: number[]);
    get outerAppWindowRect(): number[];
    set outerDocWindowRect(_: number[]);
    get outerDocWindowRect(): number[];
    set pageNum(value: any);
    get pageNum(): any;
    set pageWindowRect(_: number[]);
    get pageWindowRect(): number[];
    set path(_: string);
    get path(): string;
    set permStatusReady(_: boolean);
    get permStatusReady(): boolean;
    set producer(_: any);
    get producer(): any;
    set requiresFullSave(_: boolean);
    get requiresFullSave(): boolean;
    set securityHandler(_: any);
    get securityHandler(): any;
    set selectedAnnots(_: any[]);
    get selectedAnnots(): any[];
    set sounds(_: any[]);
    get sounds(): any[];
    set spellDictionaryOrder(spellDictionaryOrder: any[]);
    get spellDictionaryOrder(): any[];
    set spellLanguageOrder(spellLanguageOrder: any[]);
    get spellLanguageOrder(): any[];
    set subject(_: any);
    get subject(): any;
    set templates(_: any[]);
    get templates(): any[];
    set title(_: any);
    get title(): any;
    set URL(_: any);
    get URL(): any;
    set viewState(_: any);
    get viewState(): any;
    set xfa(_: any);
    get xfa(): any;
    set XFAForeground(_: boolean);
    get XFAForeground(): boolean;
    set zoomType(type: "NoVary");
    get zoomType(): "NoVary";
    set zoom(value: any);
    get zoom(): any;
    addAnnot(): void;
    addField(): void;
    addIcon(): void;
    addLink(): void;
    addRecipientListCryptFilter(): void;
    addRequirement(): void;
    addScript(): void;
    addThumbnails(): void;
    addWatermarkFromFile(): void;
    addWatermarkFromText(): void;
    addWeblinks(): void;
    bringToFront(): void;
    calculateNow(): void;
    closeDoc(): void;
    colorConvertPage(): void;
    createDataObject(): void;
    createTemplate(): void;
    deletePages(): void;
    deleteSound(): void;
    embedDocAsDataObject(): void;
    embedOutputIntent(): void;
    encryptForRecipients(): void;
    encryptUsingPolicy(): void;
    exportAsFDF(): void;
    exportAsFDFStr(): void;
    exportAsText(): void;
    exportAsXFDF(): void;
    exportAsXFDFStr(): void;
    exportDataObject(): void;
    exportXFAData(): void;
    extractPages(): void;
    flattenPages(): void;
    getAnnot(): void;
    getAnnots(): void;
    getAnnot3D(): void;
    getAnnots3D(): void;
    getColorConvertAction(): void;
    getDataObject(): void;
    getDataObjectContents(): void;
    _getField(cName: any): any;
    getField(cName: any): any;
    _getChildren(fieldName: any): any[];
    _getTerminalChildren(fieldName: any): any[];
    getIcon(): void;
    getLegalWarnings(): void;
    getLinks(): void;
    getNthFieldName(nIndex: any): any;
    getNthTemplate(): any;
    getOCGs(): void;
    getOCGOrder(): void;
    getPageBox(): void;
    getPageLabel(): void;
    getPageNthWord(): void;
    getPageNthWordQuads(): void;
    getPageNumWords(): void;
    getPageRotation(): void;
    getPageTransition(): void;
    getPrintParams(): any;
    getSound(): void;
    getTemplate(): void;
    getURL(): void;
    gotoNamedDest(): void;
    importAnFDF(): void;
    importAnXFDF(): void;
    importDataObject(): void;
    importIcon(): void;
    importSound(): void;
    importTextData(): void;
    importXFAData(): void;
    insertPages(): void;
    mailDoc(): void;
    mailForm(): void;
    movePage(): void;
    newPage(): void;
    openDataObject(): void;
    print(bUI?: boolean, nStart?: number, nEnd?: number, bSilent?: boolean, bShrinkToFit?: boolean, bPrintAsImage?: boolean, bReverse?: boolean, bAnnotations?: boolean, printParams?: any): void;
    removeDataObject(): void;
    removeField(): void;
    removeIcon(): void;
    removeLinks(): void;
    removeRequirement(): void;
    removeScript(): void;
    removeTemplate(): void;
    removeThumbnails(): void;
    removeWeblinks(): void;
    replacePages(): void;
    resetForm(aFields?: any): void;
    saveAs(): void;
    scroll(): void;
    selectPageNthWord(): void;
    setAction(): void;
    setDataObjectContents(): void;
    setOCGOrder(): void;
    setPageAction(): void;
    setPageBoxes(): void;
    setPageLabels(): void;
    setPageRotations(): void;
    setPageTabOrder(): void;
    setPageTransitions(): void;
    spawnPageFromTemplate(): void;
    submitForm(): void;
    syncAnnotScan(): void;
}
import { PDFObject } from "./pdf_object.js";
